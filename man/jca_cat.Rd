% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/rjca.R
\name{jca_cat}
\alias{jca_cat}
\title{Drive the category counter}
\usage{
jca_cat(dictionary, files, ...)
}
\arguments{
\item{dictionary}{a content analysis dictionary}

\item{files}{a list of file and folder names}

\item{...}{extra arguments to control the process. See Details.}
}
\value{
a data.frame containing the content analysis results
}
\description{
Drive the category counter.  See details for possible extra arguments.
}
\details{
Optional arguments are
\itemize{
 \item{\code{locale}: }{Locale in ISO format, e.g. "en_US".
   Defaults to whatever \code{get_locale} returns}
 \item{\code{encoding}: }{the file encoding of the \code{files}. Defaults to the
  whatever \code{get_encoding} returns}
 \item{\code{output}: }{the folder that the results will land in before being served
  back as a data.frame.  Defaults to a temporary folder}
 \item{\code{old.matching}: }{whether to use the old style pattern matching
  (behaves like JFreq but also risks double counting when multiple patterns match
  a string). Defaults to FALSE}
 \item{\code{progress}: }{Whether to show the progress of the java code as it goes
 through the \code{files}}
}
This function also dumps the location of the temporary folder where the
results landed to
standard error in case you want the original csv data file and yoshikoder dictionary
translation.

The output is a data.frame with documents as row names, dictionary categories as
column names and counts of how many words in each document matched patterns in that
category.  Dictionaries are hierarchically structured so category names are sorted
depth first and
}

